// các api đều yêu cầu accessToken của người dùng đang đăng nhập

*localhost:3000/user/blocked/block
input
{
    "userId": "user003" //id người bạn muốn chặn
}
output
{
    "success": true,
    "message": "Chặn người dùng thành công",
    "data": {
        "blockedId": "user003"
    },
    "error": null
}

*localhost:3000/user/blocked/block (không tìm thấy người dùng)
input
{
    "userId": "user005" //id người bạn muốn chặn
}
output
{
    "success": false,
    "message": "Người dùng không tồn tại",
    "data": null,
    "error": "User not found"
}

*localhost:3000/user/blocked/block (Nếu đã chặn rồi)
input
{
    "userId": "user003" //id người bạn muốn chặn
}
output
{
    "success": false,
    "message": "Người dùng đã bị chặn trước đó",
    "data": null,
    "error": "User already blocked"
}

//UNBLOCK
*localhost:3000/user/blocked/unblock
{
    "userId": "user003" //id người bạn muốn huỷ chặn
}
output
{
    "success": true,
    "message": "Bỏ chặn người dùng thành công",
    "data": {
        "blockedId": "user003"
    },
    "error": null
}

*localhost:3000/user/blocked/unblock (Nếu người dùng không có trong danh sách chặn của user đang đăng nhập)
{
    "userId": "user003" //id người bạn muốn huỷ chặn
}
output
{
    "success": false,
    "message": "Người dùng không có trong danh sách chặn",
    "data": null,
    "error": "User not blocked"
}

*localhost:3000/user/blocked/unblock (Nếu người dùng không tồn tại trong db)
{
    "userId": "user005" //id người bạn muốn huỷ chặn
}
output
{
    "success": false,
    "message": "Người dùng không có trong danh sách chặn",
    "data": null,
    "error": "User not blocked"
}

*localhost:3000/user/blocked/get-blocked (Nếu người dùng chưa chặn ai)
input: accessToken
output:
{
    "success": true,
    "message": "Lấy danh sách người bị chặn thành công",
    "data": [],
    "error": null
}

*localhost:3000/user/blocked/get-blocked 
input: accessToken
output:
{
    "success": true,
    "message": "Lấy danh sách người bị chặn thành công",
    "data": [
        {
            "id": "user003",
            "fullname": "Alice Johnson",
            "urlavatar": "https://example.com/avatars/alice.jpg",
            "email": "alice.johnson@example.com",
            "phone": "0933445566"
        }
    ],
    "error": null
}

** Test socket
listen: blockedByUser
listen: unblockedByUser
emit: joinUserRoom (lấy id của người muốn chặn)

*localhost:3000/user/blocked/block
input:
    user003
output:
{
    "blockerId": "user001",
    "fullname": "John Doe",
    "urlavatar": "https://example.com/avatars/john.jpg",
    "message": "Bạn đã bị chặn bởi một người dùng"
}

*localhost:3000/user/blocked/unblock
input:
    user003
output:
{
    "blockerId": "user001",
    "fullname": "John Doe",
    "urlavatar": "https://example.com/avatars/john.jpg",
    "message": "Bạn đã được bỏ chặn bởi một người dùng"
}